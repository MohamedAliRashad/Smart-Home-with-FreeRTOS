



#include<C:/Users/Mariam/Desktop/pwm/tm4c123gh6pm.h>
#include "stdint.h"
#include "PWM.h"
//typedef unsigned long uint32_t;




/*************************************************************************************
 ******************This function is to enable PWM ClK*********************************/


void Enable_PWM_clk (uint32_t Mask)
{
 SYSCTL_RCGC0_R |= Mask;
}


/************************************************************************************
 **********************Enable the ClK to specific PORT*******************************/


 void Enable_PWM_clk_PORT (uint32_t Mask)
 {
  SYSCTL_RCGC2_R |= Mask;
 }


 /*************************************************************************************
  **************************Set the AFSEL of the required PIN**************************/

 void Set_AFSEL (uint32_t Mask , uint8_t Index )
 {
  if (Index==0)
  {
   GPIO_PORTA_AFSEL_R |= Mask;
  }
  else if (Index==1)
  {
   GPIO_PORTB_AFSEL_R |= Mask;
  }
  else if (Index==2)
  {
   GPIO_PORTC_AFSEL_R |= Mask;
  }
  else if (Index==3)
  {
   GPIO_PORTD_AFSEL_R |= Mask;
  }
  else if (Index==4)
  {
   GPIO_PORTE_AFSEL_R |= Mask;
  }
  else if (Index==5)
  {
   GPIO_PORTF_AFSEL_R |= Mask;
  }
 }




 /***************************************************************************
  ***************************PCTL********************************************/

 void Controling_PCTL (uint32_t Mask1,uint32_t Mask2,uint8_t Index)
 {                                                                       //Mask 1 = Reset PIN , Mask 2= Alternate function , Index= PORT select
     if (Index==0)
       {
         GPIO_PORTA_PCTL_R &= ~Mask1;
         GPIO_PORTA_PCTL_R |= Mask2;
       }
       else if (Index==1)
       {
        GPIO_PORTB_PCTL_R &= ~Mask1;
        GPIO_PORTB_PCTL_R |= Mask2;
       }
       else if (Index==2)
       {
        GPIO_PORTC_PCTL_R &= ~Mask1;
        GPIO_PORTC_PCTL_R |= Mask2;
       }
       else if (Index==3)
       {
        GPIO_PORTD_PCTL_R &= ~Mask1;
        GPIO_PORTD_PCTL_R |= Mask2;
       }
       else if (Index==4)
       {
        GPIO_PORTE_PCTL_R &= ~Mask1;
        GPIO_PORTE_PCTL_R |= Mask2;
       }
       else if (Index==5)
       {
        GPIO_PORTF_PCTL_R &= ~Mask1;
        GPIO_PORTF_PCTL_R |= Mask2;
       }
 }
 void Set_AMSEL (uint32_t Mask , uint8_t Index )
  {
   if (Index==0)
   {
    GPIO_PORTA_AMSEL_R &= ~Mask;
   }
   else if (Index==1)
   {
    GPIO_PORTB_AMSEL_R &= ~Mask;
   }
   else if (Index==2)
   {
    GPIO_PORTC_AMSEL_R &= ~Mask;
   }
   else if (Index==3)
   {
    GPIO_PORTD_AMSEL_R &= ~Mask;
   }
   else if (Index==4)
   {
    GPIO_PORTE_AMSEL_R &= ~Mask;
   }
   else if (Index==5)
   {
    GPIO_PORTF_AMSEL_R &= ~Mask;
   }
  }
	void PWM_RCC_Divisor(uint32_t PWM_DIVISOR )
	{
		SYSCTL_RCC_R |= SYSCTL_RCC_USEPWMDIV;
			SYSCTL_RCC_R |= PWM_DIVISOR;
	}

 void PWM_Init(uint32_t Frequency , uint32_t Duty , uint32_t Mask)
 {
   PWM1_3_CTL_R = 0x00000000;
	 PWM1_3_GENA_R = 0x0000008C;
	 PWM1_3_LOAD_R = Frequency-1;
	 PWM1_3_CMPA_R = Duty;
	 PWM1_3_CTL_R = PWM_0_CTL_ENABLE;
	 PWM1_ENABLE_R = Mask;
 }

 
